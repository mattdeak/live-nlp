version: '3'
services:
    flask:
        container_name: 'livenlp_dashboard'
        build:
            context: ./app
            dockerfile: Dockerfile
        ports:
            - "5000:5000"
        environment:
            FLASK_ENV: development
        volumes:
            - ./app:/home/app
    bokeh:
        container_name: 'livenlp_bokeh'
        build:
            context: ./bokeh
            dockerfile: Dockerfile
        ports:
            - "5006:5006"
        depends_on:
            - db
        environment:
            - DB_NAME=$DB
            - DB_COL=$COLLECTION
        volumes:
            - ./bokeh:/home/app
    db:
        image: mongo:latest
        container_name: 'livenlp_mongo'
        hostname: mongodb
        volumes:
            # - ./mongo/mongod.conf:/etc/mongod.conf
            # - ./mongo/initdb.d:/docker-entrypoints-initdb.d/
            - mongodb_data_container:/data/db/
            - ./mongo/data/log/:/var/log/mongodb/
        # environment:
            # MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            # MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            # MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
        ports:
            - "27017:27017"
        # command: ["-f", "/etc/mongod.conf"]
    tfserver:
        build:
            context: ./tfserver
            dockerfile: Dockerfile
        ports:
            - "8501:8501"
    bots:
        container_name: 'livenlp_bots'
        build:
            context: ./bots
            dockerfile: Dockerfile
        depends_on:
            # - tfserver
            - db
        environment:
            - DB_NAME=$DB
            - DB_COL=$COLLECTION
volumes:
    mongodb_data_container:
